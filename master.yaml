Description: >
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group.
    Finally, it deploys a pair of ECS services from containers stored in ECR.

    Last Modified: 19th September 2016
    Author: Paul Maddox <pmaddox@amazon.com>

Parameters:

    TemplateLocation:
        Type: String
        Description: The S3 location containing the nested CloudFormation templates for this stack
        Default: https://<bucket-tbd>.s3-eu-west-1.amazonaws.com/ecs-refarch-cloudformation

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/infrastructure/vpc.template
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/infrastructure/security-groups.template
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/infrastructure/load-balancers.template
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/infrastructure/ecs-cluster.template
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.large
                ClusterSize: 4
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    ProductService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/services/product-service.template
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: /products

    WebsiteService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateLocation}/services/website-service.template
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                ProductServiceUrl: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: /


Outputs:

    ProductServiceUrl: 
        Description: The URL endpoint for the product service
        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]

    WebsiteServiceUrl: 
        Description: The URL endpoint for the website service
        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]
